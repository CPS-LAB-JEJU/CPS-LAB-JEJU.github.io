<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-05-04T12:57:17+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">CPS LAB</title><subtitle>CPS LAB 개발자들을 위한 정보 공유 블로그
</subtitle><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><entry><title type="html">REST API 란?</title><link href="http://localhost:4000/backend/web/2023-05-04-REST_API/" rel="alternate" type="text/html" title="REST API 란?" /><published>2023-05-04T00:00:00+09:00</published><updated>2023-05-04T12:37:00+09:00</updated><id>http://localhost:4000/backend/web/REST_API</id><content type="html" xml:base="http://localhost:4000/backend/web/2023-05-04-REST_API/"><![CDATA[<p>유저 인증이나 요리 리스트 등 데이터를 통신하기 위해서 우리는 API 를 구성한다. API 는 백엔드에 있어서 서비스 로직이 가장 많이 들어가는 부분이기도 하다. 간단히 구성을 알아보자.</p>

<h3 id="rest-api-란">REST API 란?</h3>

<p>REST(Representational State Transfer) API 란 데이터를 통신함에 있어 이름 등을 지정해서 리소스의 상태를 통신하는 방식을 의미한다. 주로 json 을 이용한 포멧으로 사용한다. 이 방식에는 몇가지 규칙이 있다.</p>

<ol>
  <li>HTTP URI(Uniform Resource Identifier)를 통해서 자원을 표현한다.</li>
  <li>HTTP Method(GET, POST, …) 를 이용한다.</li>
  <li>이 방식을 통해서 자원(URI)에 대한 CRUD 를 실행한다.</li>
</ol>

<p><br /></p>

<p>처음에는 규칙이 다 상관이 없는 것 같은데 사실은 이어져 있다. 1번은 어떤 자원을 이용할 것인지 정의하고, 2번은 어떤 액션을 할건지 정의하고, 3번은 1,2번을 통해서 실제 DB에 반영 내용을 의미한다. HTTP 프로토콜을 그대로 사용하기 때문에 별도로 인프라 구축이 필요없고 대부분의 플랫폼에서 이용가능하다. 하지만, 표준이 없기 때문에 정의를 해야하고, 구형 브라우저에서는 사용하지 못하는 문제, Method 가 제한적이라는 단점이 있다. 이외의 리소스의 상태를 코드로 나타내는데, 그 유명한 404, 200 OK가 여기에 포함된다.</p>

<p><br /></p>

<h3 id="restful-api-란">RESTful API 란?</h3>

<p>간혹 면접을 볼때 REST API 와 RESTful API를 묻는 경우가 있는데, RESTful 이라는 이름과 같이 REST API 를 이용하는 서비스(시스템)을 의미한다. 단순히 REST API 가 잘 정의되어있다면 RESTful 하다 라고 말하는 것이다.</p>

<p><br /></p>

<h2 id="rest-api-실전-적용"><strong>REST API 실전 적용!</strong></h2>

<h3 id="1-uri-컨벤션">1. URI <strong>컨벤션</strong></h3>

<p>URI 를 정의할 때 기초적으로 알려진 몇가지 컨벤션이 있다.</p>

<ul>
  <li>
    <p>동사보단 명사로</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">POST</span> <span class="o">/</span><span class="n">documents</span><span class="o">/</span><span class="nf">new </span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
  <span class="n">POST</span> <span class="o">/</span><span class="nf">documents </span><span class="p">(</span><span class="n">O</span><span class="p">)</span>
</code></pre></div>    </div>

    <p>POST 메소드가 이미 생성의 의미를 가지고 있어 new를 사용하는 것은 이상하다. (의미 중복)</p>
  </li>
  <li>
    <p>리소스는 복수로</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">POST</span> <span class="o">/</span><span class="nf">document </span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
  <span class="n">POST</span> <span class="o">/</span><span class="nf">documents </span><span class="p">(</span><span class="n">O</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>_ 대신  - 로 작성</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">POST</span> <span class="o">/</span><span class="n">users</span><span class="o">/</span><span class="nf">sign_in </span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
  <span class="n">POST</span> <span class="o">/</span><span class="n">users</span><span class="o">/</span><span class="n">sign</span><span class="o">-</span><span class="ow">in</span> <span class="p">(</span><span class="n">O</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>행위(method)는 작성하지 않는다.</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">POST</span> <span class="o">/</span><span class="n">document</span><span class="o">/</span><span class="nf">post </span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
  <span class="n">POST</span> <span class="o">/</span><span class="nf">document </span><span class="p">(</span><span class="n">O</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>이 글을 읽어보는 것을 추천한다.</p>

<p><a href="https://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api#restful">Best Practices for Designing a Pragmatic RESTful API</a></p>

<p><br /></p>

<h3 id="2method-알아가기">2.METHOD 알아가기</h3>

<p>위 URI 컨벤션에서 이미 이야기한 내용도 있지만, API에서 METHOD는 각각 의미를 가지고 있는데, 우선 Method 로는 GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS 등이 있다. (CONNECT, TRACE 라는 것이 있긴한데… API에서 주로 사용하지는 않는다.)</p>

<ul>
  <li>
    <p>GET :  특정 리소스를 조회, 가져오기 (list, detail(단일 리소스))</p>
  </li>
  <li>
    <p>POST :  리소스 생성-수정</p>
  </li>
  <li>
    <p>PUT : 리소스 수정 하지만, 정의하지 않은 값은 default 값으로 업데이트</p>
  </li>
  <li>
    <p>PATCH : 리소스의 특정 부분만 수정, PUT과 달리 정의하지 않은 값은 업데이트 하지 않는다.</p>
  </li>
  <li>
    <p>DELETE : 리소스 제거</p>
  </li>
  <li>
    <p>HEAD : GET과 동일하지만, 헤더 정보만 응답하는 메서드(리소스 바디가 존재하지 않음)</p>
  </li>
  <li>
    <p>OPTIONS : 해당 엔드 포인트에서 사용할 수 있는 Method를 응답합니다. 하지만, 요즘은 swagger 등으로 api 문서를 자동화해두어서 options를 이용하는 일이 변로 없긴합니다..</p>
  </li>
</ul>

<p><br /></p>

<p>여기서 HEAD와 OPTIONS는 리소스의 대한 정의가 아니고 대체할 수 있는 것들이 많기 때문에 크게 중요하지 않다.</p>

<p><br />
<br /></p>

<h3 id="method-특징들">METHOD 특징들…!</h3>

<p><strong>안정성</strong></p>

<p>안정성이란 실제 리소스에 영향을 주지 않는 것을 의미한다. GET, HEAD, OPTIONS는 단순 조회 이기 때문에 리소스 변경에 영향을 주지 않는다. POST, PUT, PATCH, DELETE 는 변경을 줌으로 안전성에 부합하지 않는 메서드이다.</p>

<p><br /></p>

<p><strong>멱등성</strong></p>

<p>멱등성이란, 여러번의 연산에 상관없이 동일한 결과가 내려오는 것이다. GET, PUT, DELETE, HEAD, OPTIONS 는 당연히 같은 응답이 내려오도록 해야한다. 하지만, POST 와 PATCH는 그렇지 않다.</p>

<p>POST의 경우 같은 요청을 여러번 보내면 여러개의 데이터가 생성(응답)하기 때문에 멱등하지 않고, PATCH의 경우 멱등성을 가지거나 가지지 않게 설계할 수 있다. 예를 들어 요청마다 값을 1씩 증가시키는 경우 멱등성을 가지지 않는다. 하지만, 값을 10으로 업데이트 하는 요청이라면 같은 값으로 업데이트 하기 때문에 멱등성이 인정된다.</p>

<p><br /></p>

<p><strong>캐싱</strong></p>

<p>이런 Method 를 보다보면 캐싱하는 경우가 몇가지 있다. 리소스 변경이 없는 GET의 경우 흔히 캐싱이 일어나지만, 다른 메소드의 경우 캐싱이 어렵다. 리소스 변경이 일어나면 캐싱을 새로 업데이트 해야하는 문제 때문이다. 그렇지만, 이론적으로 POST, PATCH는 캐싱이 가능하지만, 구현이 어렵다는 문제가 있다.</p>

<p><br /></p>

<p><strong>GET 과 POST의 차이점</strong></p>

<p>POST의 경우, GET을 대체할 수 있다는 특징을 가진다. GET에는 리소스를 쿼리 스트링으로 넘겨주게 된다. 하지만, 보안과 관련된 내용이 쿼리 스트링(url) 로 나오게 되면 문제(캐싱 및 기록에 남는것이.. 문제)가 되기 때문에 이런 경우 POST 를 이용하게 된다. POST는 캐싱이나 브라우저(북마크 등)에 기록되지 않기 때문에 GET 보다 문제가 덜하다.</p>

<p><br /></p>

<p><strong>PUT 과 PATCH의 차이점 정리</strong></p>

<p>PUT은 전체 수정 PATCH는 일부 또는 전체 수정이고, PUT은 멱등성을 보장해야하지만, PATCH는 상관없다.</p>

<p><br />
<br /></p>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="backend" /><category term="web" /><category term="web" /><summary type="html"><![CDATA[REST API 이론]]></summary></entry><entry><title type="html">JWT 란?</title><link href="http://localhost:4000/backend/web/2023-05-04-JWT/" rel="alternate" type="text/html" title="JWT 란?" /><published>2023-05-04T00:00:00+09:00</published><updated>2023-05-04T12:49:12+09:00</updated><id>http://localhost:4000/backend/web/JWT</id><content type="html" xml:base="http://localhost:4000/backend/web/2023-05-04-JWT/"><![CDATA[<p><strong>JWT(json web token)란?</strong></p>

<p>JWT는 사용자를 인증할 때 사용하는 방식중 하나로 세션과 달리 클라이언트에 토큰 값을 저장하고, 이 값을 요청 시에 서버로 보내 인증을 하는 구조이다. 서버에 세션을 저장하는 것이 아니라 토큰이 전달될때 확인만 하는 구조이기 때문에 서버가 분산된 시스템에서는 처리하기 좋다.</p>

<p><br /></p>

<p>당연하게도 json 형식이고 구성은 다음과 같이 이루어진다.</p>

<ul>
  <li>Header</li>
  <li>Payload</li>
  <li>Signature</li>
</ul>

<p>Header에는 토크 타입이나, 암호화에 사용하는 알고리즘을 정의한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
	<span class="s">"typ"</span><span class="p">:</span> <span class="s">"JWT"</span><span class="p">,</span>
	<span class="s">"alg"</span><span class="p">:</span> <span class="s">"SHA256"</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Payload에는 유저 정보를 담는데, 간단히 정리하면 다음과 같다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
	<span class="s">"sub"</span><span class="p">:</span> <span class="s">"인증 주체"</span><span class="p">,</span>
	<span class="s">"iss"</span><span class="p">:</span> <span class="s">"발급처"</span><span class="p">,</span>
	<span class="s">"iat"</span><span class="p">:</span> <span class="s">"발급 시각"</span><span class="p">,</span>
	<span class="s">"exp"</span><span class="p">:</span> <span class="s">"만료 시긱"</span><span class="p">,</span>
	<span class="s">"aud"</span><span class="p">:</span> <span class="s">"클라이언트"</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Signature에는 해당 토큰이 서버에서 생성한 것인지 확인 할때 중요한 부분인데, 헤더+페이로드를 서버의 secret_key로 서명한다. 또는 base64+payload+secret_key 로 서명하기도 한다. (당연한 이야기 지만, secret_key가 변경되면 해당 값도 달라지기 때문에 서비스 도중에 변경하게 되면 이슈가 있을 수 있다.)</p>

<p><br /></p>

<p><strong>JWT 통신 과정</strong></p>

<ol>
  <li>클라이언트에서 사용자, 아이디, 패스워드를 서버로 요청</li>
  <li>서버는 파라미터를 DB에서 조회, 사용자를 인증하고, 토큰을 발급</li>
  <li>토큰을 응답으로 전달</li>
</ol>

<p><br /></p>

<p><strong>JWT의 문제점?</strong></p>

<p>JWT의 문제점으로는… 담는 정보가 많을 수록 토큰 길이도 커진다는 점과 클라이언트에 토큰을 저장하기 때문에 이 토큰이 탈취될 수 있다는 점이다. 이 점을 보완하기 위해 탈취 되더라도 재발급 할 수 있도록, 토큰을 access token 과 refresh token으로 나누는 방식으로 활용한다. access_token(인증할 때 사용하는 토큰)의 expire을 짧게 가져가서 일정 시간마다 갱신되게 하는 것이다.</p>

<p><br /></p>

<p><strong>토큰은 어디에 저장하나?</strong></p>

<p>우선 토큰을 브라우저에 저장 시켜야 한다. 그래야 사용자가 일일이 로그인하는 수고를 덜할 수 있는데… 문제는 저장 위치이다. 2가지 옵션이 있는데, 하나는 <code class="language-plaintext highlighter-rouge">local_storage</code> 이고 다른 하나는 쿠키이다. 하지만, 둘다 JS를 통해서 글로벌 변수로 선언해서 가져올 수 있다. 토큰이 탈취된다면, XSS 나 CSRF 공격이 들어올 수 있다. 관련된 공격으로는 아래와 같다.</p>

<p><br /></p>

<p><strong>관련된 공격</strong></p>

<p><strong>XSS(Cross Site Scripting)</strong></p>

<p>XSS 는 사이트 내에 악의적인 코드를 심어두어서 사용자의 개인 정보나 서버 접근 등의 공격을 하는 것을 의미한다. 웹 페이지를 수정해서 다른 사용자가 접속 했을 때 피싱서버로 리다이렉션 시킨다던지 여러 방식으로 활용한다.</p>

<p><br /></p>

<p><strong>CSRF(Cross Site Request Forgery)</strong></p>

<p>사용자 정보를 이용해 공격자가 요청을 보내도록 하여 피해를 주는 공격을 의미한다. 예를 들면 비밀번호 변경 버튼의 주소를 변경해서 시 유저 아이디와 비밀번호를 보낼 때 다른 서버(공격자의 서버)로 요청하게 하는 방식이다.</p>

<p>위 2가지 방식 모두 Cross Site(사이트를 넘어서하는 공격), 공격자의 서버를 경유하게 두어서 개인정보를 수집할 수 있다는 문제가 있다.</p>

<blockquote>
  <p>그러면 어케…?</p>

</blockquote>

<p>이를 방지하려면 쿠키에 저장하되, 조금 처리를 해주어야 한다. 그게 Secure, HttpOnly 쿠키이다.</p>

<p><br /></p>

<p><strong>HttpOnly 쿠키..?</strong></p>

<p>기존 자바 스크립트 등에서 쿠키를 조회하고 탐색할 수 있는데, 해커 등 악의적인 목적으로 쿠키를 탈취(XSS : Cross Site Scripting) 할 수 있기 때문에 문제가 되었다. 이를 막기 위해 해당 옵션으로 브라우저에서 쿠키에 접근할 수 없도록 제한하는 것이 HttpOnly 쿠키이다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 아래처럼 끝에 HttpOnly를 붙이면 된다.
</span><span class="n">Set</span><span class="o">-</span><span class="n">Cookie</span><span class="p">:</span> <span class="n">쿠키이름</span><span class="o">=</span><span class="n">값</span><span class="p">;</span> <span class="n">path</span><span class="o">=/</span><span class="p">;</span> <span class="n">HttpOnly</span>
</code></pre></div></div>

<p><br /></p>

<p>이는 JWT 뿐만아니라 기존 브라우저 내에 쿠키에 접근할 일이 별로 없기 때문에 필수적으로 붙여두는 게 좋다. 웹 보안의 일부라고 생각하면 될 것 같다. 물론 패킷 스니핑은 별도로 막아야 한다.(와이어 샤크 등으로 전송 레이어에서 패킷을 분석하는 방식)</p>

<blockquote>
  <p>네트워크에서 패킷을 가로채는… 스니핑은 어떻게…?</p>

</blockquote>

<p><br /></p>

<p>이 경우 secure 쿠키를 이용하면 된다. secure 쿠키의 경우, HTTPS 가 아닌 통신으로는 쿠키를 보내지 않는 다는 것이다. (HTTPS 은 SSL/TLS 방식이 적용 되었기 때문에 통신 과정에서도 암호화가 되기 때문이다.) 주로 세션 쿠키에 설정된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Set</span><span class="o">-</span><span class="n">Cookie</span><span class="p">:</span> <span class="n">쿠키이름</span><span class="o">=</span><span class="n">값</span><span class="p">;</span> <span class="n">path</span><span class="o">=/</span><span class="p">;</span> <span class="n">secure</span>
</code></pre></div></div>

<p><br />
<br />
<br /></p>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="backend" /><category term="web" /><category term="web" /><summary type="html"><![CDATA[JWT 이론]]></summary></entry><entry><title type="html">Django 로그인&amp;amp;회원가입 JWT 로 구현</title><link href="http://localhost:4000/backend/django/2023-05-04-Django/" rel="alternate" type="text/html" title="Django 로그인&amp;amp;회원가입 JWT 로 구현" /><published>2023-05-04T00:00:00+09:00</published><updated>2023-05-04T12:55:46+09:00</updated><id>http://localhost:4000/backend/django/Django</id><content type="html" xml:base="http://localhost:4000/backend/django/2023-05-04-Django/"><![CDATA[<p>기존 로그인 방식으로는 세션과 JWT 를 이용한 방식이 있다. JWT에 대해서는 아래 글에서 설명하였다. 이번에는 Django에서 JWT 로그인 방식을 구현하는 지 소개한다.</p>

<p><a href="/backend/web/2023-05-04-JWT/">JWT</a></p>

<p><br /></p>

<p><strong>세팅</strong></p>

<p>우선 djangorestframework–simplejwt 와 django_rest_auth 를 패키지를 Django 프로젝트에 추가시킨다.</p>

<p><br /></p>

<p><a href="https://django-rest-framework-simplejwt.readthedocs.io/en/latest/getting_started.html#requirements">Getting started — Simple JWT 5.2.2.post16+gf298efa documentation</a></p>

<p><br /></p>

<p>그리고 위 문서에도 나타나 있듯이 Django 세팅 파일에 다음과 같이 추가해주어야 인증 시 JWT를 이용하게 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">REST_FRAMEWORK</span> <span class="o">=</span> <span class="p">{</span>
    <span class="p">...</span>
    <span class="s">'DEFAULT_AUTHENTICATION_CLASSES'</span><span class="p">:</span> <span class="p">(</span>
        <span class="p">...</span>
        <span class="s">'rest_framework_simplejwt.authentication.JWTAuthentication'</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="p">...</span>
<span class="p">}</span>
</code></pre></div></div>

<p>그러면 이제 해당 패키지 내부의 있는 기능들을 하나씩 사용할 수 있다. 간단히 회원가입 시 JWT 를 발급해주는 것 부터 시작하자.</p>

<p><br />
<br /></p>

<p><strong>준비 과정</strong></p>

<p>우선 발급하기에 앞서서 회원가입에 필요한 유저 아이디, 패스워드를 받는 api를 구성해야한다. 간단히… User 모델을 만들고..</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">email.policy</span> <span class="kn">import</span> <span class="n">default</span>
<span class="kn">from</span> <span class="n">importlib.metadata</span> <span class="kn">import</span> <span class="n">requires</span>
<span class="kn">from</span> <span class="n">django.contrib.auth.models</span> <span class="kn">import</span> <span class="n">AbstractUser</span>
<span class="kn">from</span> <span class="n">django.contrib.auth.models</span> <span class="kn">import</span> <span class="n">PermissionsMixin</span>
<span class="kn">from</span> <span class="n">django.contrib.auth.models</span> <span class="kn">import</span> <span class="n">UserManager</span>
<span class="kn">from</span> <span class="n">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">User</span><span class="p">(</span><span class="n">AbstractUser</span><span class="p">,</span> <span class="n">PermissionsMixin</span><span class="p">):</span>
    <span class="n">username</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="nc">CharField</span><span class="p">(</span>
        <span class="s">"아이디"</span><span class="p">,</span>
        <span class="n">max_length</span><span class="o">=</span><span class="mi">256</span><span class="p">,</span>
        <span class="n">unique</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="nc">CharField</span><span class="p">(</span>
        <span class="s">"이름"</span><span class="p">,</span>
        <span class="n">max_length</span><span class="o">=</span><span class="mi">256</span><span class="p">,</span>
        <span class="n">default</span><span class="o">=</span><span class="s">""</span><span class="p">,</span>
        <span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">"users"</span>
        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s">"user"</span>
        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s">"users"</span>
        <span class="n">swappable</span> <span class="o">=</span> <span class="s">"AUTH_USER_MODEL"</span>

    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="sa">f</span><span class="s">"[</span><span class="si">{</span><span class="n">self</span><span class="p">.</span><span class="nb">id</span><span class="si">}</span><span class="s">] </span><span class="si">{</span><span class="n">self</span><span class="p">.</span><span class="n">name</span><span class="si">}</span><span class="s">"</span>
</code></pre></div></div>

<p>마이그레이션을 하고 진행하자.</p>

<p><br /></p>

<p>이제 view를 구성해서 간단히 작성하면 다음과 같다. 이름은 Register라는 이름으로 많이 붙이는데 본인이 원하는 이름으로 잘 작성하자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">UserSignUpView</span><span class="p">(</span><span class="n">APIView</span><span class="p">):</span>
    <span class="n">model</span> <span class="o">=</span> <span class="n">User</span>
    <span class="n">queryset</span> <span class="o">=</span> <span class="n">User</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="nf">all</span><span class="p">()</span>
    <span class="n">authentication_classes</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">permission_classes</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">serializer_class</span> <span class="o">=</span> <span class="n">UserSignUpSerializer</span>

    <span class="k">def</span> <span class="nf">post</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">request</span><span class="p">):</span>
        <span class="n">serializer</span> <span class="o">=</span> <span class="nc">UserSignUpSerializer</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">request</span><span class="p">.</span><span class="n">data</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">serializer</span><span class="p">.</span><span class="nf">is_valid</span><span class="p">():</span>
            <span class="n">user</span> <span class="o">=</span> <span class="n">serializer</span><span class="p">.</span><span class="nf">save</span><span class="p">()</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="nc">Response</span><span class="p">(</span><span class="n">serializer</span><span class="p">.</span><span class="n">errors</span><span class="p">,</span> <span class="n">status</span><span class="o">=</span><span class="n">status</span><span class="p">.</span><span class="n">HTTP_400_BAD_REQUEST</span><span class="p">)</span>
</code></pre></div></div>

<p>코드를 보면 알겠지만, serializer에 맞는 데이터가 들어오면 user를 생성하도록 구성했다. 만약 invalid한 값이 있다면 400에러가 나타날 것이다. 여기서 serializer는 회원가입시 유저아이디, 패스워드를 정의하고 save 메소드도 정의해두었다.</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">UserSignUpSerializer</span><span class="p">(</span><span class="n">serializers</span><span class="p">.</span><span class="n">ModelSerializer</span><span class="p">):</span>
    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">model</span> <span class="o">=</span> <span class="nf">get_user_model</span><span class="p">()</span>
        <span class="n">fields</span> <span class="o">=</span> <span class="p">(</span><span class="s">"username"</span><span class="p">,</span> <span class="s">"name"</span><span class="p">,</span> <span class="s">"password"</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">request</span><span class="p">):</span>
        <span class="n">user</span> <span class="o">=</span> <span class="nf">super</span><span class="p">().</span><span class="nf">save</span><span class="p">()</span>
        <span class="n">user</span><span class="p">.</span><span class="n">username</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">validated_data</span><span class="p">[</span><span class="s">"username"</span><span class="p">]</span>
        <span class="n">user</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">validated_data</span><span class="p">[</span><span class="s">"name"</span><span class="p">]</span>
        <span class="n">user</span><span class="p">.</span><span class="nf">set_password</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">validated_data</span><span class="p">[</span><span class="s">"password"</span><span class="p">])</span>
        <span class="n">user</span><span class="p">.</span><span class="nf">save</span><span class="p">()</span>
        <span class="k">return</span> <span class="n">user</span>
</code></pre></div></div>

<p><br /></p>

<p>이렇게 해두면, 요청을 보낼때 값에 맞게 user가 생성된다.</p>

<p><img src="https://user-images.githubusercontent.com/47859845/236109047-ca59501d-eaa1-4125-bae0-2b2147ef089a.png" alt="Screen Shot 2023-04-20 at 4 42 09 PM" /></p>

<p><br /></p>

<ul>
  <li>
    <p>참고</p>

    <p><a href="https://stackoverflow.com/questions/45100515/what-is-the-different-between-save-create-and-update-in-django-rest-fram">What is the different between save(), create() and update () in django rest framework?</a></p>
  </li>
</ul>

<p><br />
<br /></p>

<p><strong>Token 발급</strong></p>

<p>Token은 실제 유저를 인증하기 위한 토큰이다. 회원가입이나 로그인시 해당 토큰을 서버에서 발급하면, 클라이언트 브라우저에 쿠키로 심도록 한다. 토큰을 발급하려면 암호화나 기타 등등 확인해야하는데, simplejwt 내부 코드들을 사용하면 편리하다.</p>

<p>토큰을 발급하는 역할을 하는 것은 <code class="language-plaintext highlighter-rouge">TokenObtainPairView</code> 와  <code class="language-plaintext highlighter-rouge">TokenObtainPairSerializer</code> 에서 이루어진다. 두개 모두 Base에서 상속받아 사용하는데, 간단히 유저 인증을 하고, 해당 serializer에서 각각 assess, refresh 토큰을 전달한다. view는 해당 data를 반환한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">TokenObtainPairSerializer</span><span class="p">(</span><span class="n">TokenObtainSerializer</span><span class="p">):</span>
    <span class="n">token_class</span> <span class="o">=</span> <span class="n">RefreshToken</span>

    <span class="k">def</span> <span class="nf">validate</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">attrs</span><span class="p">):</span>
        <span class="n">data</span> <span class="o">=</span> <span class="nf">super</span><span class="p">().</span><span class="nf">validate</span><span class="p">(</span><span class="n">attrs</span><span class="p">)</span>

        <span class="n">refresh</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nf">get_token</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">user</span><span class="p">)</span>

        <span class="n">data</span><span class="p">[</span><span class="s">"refresh"</span><span class="p">]</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">refresh</span><span class="p">)</span>
        <span class="n">data</span><span class="p">[</span><span class="s">"access"</span><span class="p">]</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">refresh</span><span class="p">.</span><span class="n">access_token</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">api_settings</span><span class="p">.</span><span class="n">UPDATE_LAST_LOGIN</span><span class="p">:</span>
            <span class="nf">update_last_login</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">user</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">data</span>
</code></pre></div></div>

<p>여기까지 보면 잘 와닿지 않은데, 우리에게 필요한 것은 우리 회원가입 플로우에서 토큰을 발급하는 역할이다. 즉, user 정보를 토대로 토큰 발급하는 기능을 패키지에서 찾아볼 것이다. 위 코드를 보면 <code class="language-plaintext highlighter-rouge">self.get_token(self.user)</code> 라는 코드가 보인다. <code class="language-plaintext highlighter-rouge">TokenObtainSerializer</code> 를 확인하면 user 값을 통해 토큰을 리턴해주는 클래스 메소드가 있기 때문에 이를 이용한다.</p>

<p><br /></p>

<p>회원가입 API View에 다음과 같이 추가한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">post</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">request</span><span class="p">):</span>
    <span class="n">serializer</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nf">serializer_class</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">request</span><span class="p">.</span><span class="n">data</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="s">"serializer:"</span><span class="p">,</span> <span class="n">serializer</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="s">"is_valid:"</span><span class="p">,</span> <span class="n">serializer</span><span class="p">.</span><span class="nf">is_valid</span><span class="p">())</span>
    <span class="nf">print</span><span class="p">(</span><span class="s">"errors:"</span><span class="p">,</span> <span class="n">serializer</span><span class="p">.</span><span class="n">errors</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">serializer</span><span class="p">.</span><span class="nf">is_valid</span><span class="p">():</span>
        <span class="n">user</span> <span class="o">=</span> <span class="n">serializer</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="n">request</span><span class="o">=</span><span class="n">request</span><span class="p">)</span>
        <span class="n">token</span> <span class="o">=</span> <span class="n">TokenObtainPairSerializer</span><span class="p">.</span><span class="nf">get_token</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
        <span class="n">refresh_token</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
        <span class="n">access_token</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">token</span><span class="p">.</span><span class="n">access_token</span><span class="p">)</span>
        <span class="n">res</span> <span class="o">=</span> <span class="nc">Response</span><span class="p">(</span>
            <span class="p">{</span>
                <span class="s">"user"</span><span class="p">:</span> <span class="n">serializer</span><span class="p">.</span><span class="n">data</span><span class="p">,</span>
                <span class="s">"message"</span><span class="p">:</span> <span class="s">"register successs"</span><span class="p">,</span>
                <span class="s">"token"</span><span class="p">:</span> <span class="p">{</span>
                    <span class="s">"access"</span><span class="p">:</span> <span class="n">access_token</span><span class="p">,</span>
                    <span class="s">"refresh"</span><span class="p">:</span> <span class="n">refresh_token</span><span class="p">,</span>
                <span class="p">},</span>
            <span class="p">},</span>
            <span class="n">status</span><span class="o">=</span><span class="n">status</span><span class="p">.</span><span class="n">HTTP_200_OK</span><span class="p">,</span>
        <span class="p">)</span>
        <span class="n">res</span><span class="p">.</span><span class="nf">set_cookie</span><span class="p">(</span><span class="s">"access"</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">httponly</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
        <span class="n">res</span><span class="p">.</span><span class="nf">set_cookie</span><span class="p">(</span><span class="s">"refresh"</span><span class="p">,</span> <span class="n">refresh_token</span><span class="p">,</span> <span class="n">httponly</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">res</span>
    <span class="k">return</span> <span class="nc">Response</span><span class="p">(</span><span class="n">serializer</span><span class="p">.</span><span class="n">errors</span><span class="p">,</span> <span class="n">status</span><span class="o">=</span><span class="n">status</span><span class="p">.</span><span class="n">HTTP_400_BAD_REQUEST</span><span class="p">)</span>
</code></pre></div></div>

<p>TokenObtainPairSerializer.get_token(user) 를 통해 회원가입한 user 정보를 토대로 token을 생성하고, 해당 token 값들을 Reponse로 보내준다…</p>

<p><img src="https://user-images.githubusercontent.com/47859845/236109054-bdea232a-08af-4a8f-adfb-c380f94fa54b.png" alt="Screen Shot 2023-04-20 at 4 45 08 PM" /></p>

<p>브라우저에서 회원가입 응답을 확인하면 위와 같이 Set-Cookie 헤더가 있는 것을 볼 수 있다. 이제 클라이언트 코드에서 해당 헤더를 토대로 브라우저 쿠키에 설정해주면 된다.</p>

<p><br /></p>

<p>아래와 같은 코드를 통해서 쿠키값을 넣어준다.</p>

<p><img src="https://user-images.githubusercontent.com/47859845/236109140-191b1e9f-76a4-46a7-a3b5-abd3848754d9.png" alt="Screen Shot 2023-04-20 at 7 34 30 PM" /></p>

<p>아래와 같이 헤더에 있는 값이 지정된다.</p>

<p><img src="https://user-images.githubusercontent.com/47859845/236109057-6cc5e45d-9216-4e57-91b4-f084ca02ce8d.png" alt="Screen Shot 2023-04-20 at 7 35 24 PM" /></p>

<p><br /></p>

<p>여기서 HttpOnly와 Secure을 지정해주는 것이 좋다. 토큰이 브라우저에 남는 것이 보안상 문제가 될 수 있기 때문에 HttpOnly를 통해서 내용을 볼수 없도록 하는 것이다. 또한, 토큰을 보낼 때 Same-site 옵션도 주는 것이 좋다.</p>

<p><br />
<br /></p>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="backend" /><category term="django" /><category term="django" /><summary type="html"><![CDATA[REST API 이론]]></summary></entry><entry><title type="html">[2568] 전깃줄 -2</title><link href="http://localhost:4000/algorithms/beakjoon/2023-04-25-BOJ_2568_py/" rel="alternate" type="text/html" title="[2568] 전깃줄 -2" /><published>2023-04-25T00:00:00+09:00</published><updated>2023-04-25T15:53:30+09:00</updated><id>http://localhost:4000/algorithms/beakjoon/BOJ_2568_py</id><content type="html" xml:base="http://localhost:4000/algorithms/beakjoon/2023-04-25-BOJ_2568_py/"><![CDATA[<h3 id="문제-링크">문제 링크</h3>

<p><a href="https://www.acmicpc.net/problem/2568">2568번: 전깃줄 - 2</a></p>

<ul>
  <li>
    <p>해설</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">우선</span> <span class="n">문제에서</span> <span class="n">요구하는</span> <span class="n">것은</span> <span class="mi">2</span><span class="n">가지이다</span><span class="p">.</span>
  <span class="n">최소로</span> <span class="n">제거해야하는</span> <span class="n">전깃줄의</span> <span class="n">수와</span> <span class="n">제거할</span> <span class="n">전기줄의</span> <span class="n">번호이다</span><span class="p">.</span>
    
  <span class="n">제거할</span> <span class="n">전깃줄의</span> <span class="n">수는</span> <span class="n">이분</span> <span class="n">탐색을</span> <span class="n">돌려서</span><span class="p">,</span> <span class="n">이전</span> <span class="n">길이</span><span class="p">(</span><span class="n">cnt</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="n">의</span> <span class="n">값이</span> <span class="n">현재</span> <span class="n">탐색하는</span> <span class="n">수보다</span> <span class="n">큰</span> <span class="n">경우</span>
  <span class="n">cnt를</span> <span class="n">업데이트</span> <span class="n">하여서</span> <span class="n">최종</span> <span class="n">cnt</span> <span class="n">값을</span> <span class="n">모든</span> <span class="n">전깃줄</span> <span class="n">수에서</span> <span class="n">빼면</span> <span class="n">완료이다</span><span class="p">.</span>
    
  <span class="n">여기까지</span> <span class="n">코드는</span> <span class="n">다음과</span> <span class="n">같다</span><span class="p">.</span>
  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">def</span> <span class="nf">bs</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
      <span class="nf">while</span><span class="p">(</span><span class="n">left</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="p">):</span>
          <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
          <span class="k">if</span> <span class="n">lis</span><span class="p">[</span><span class="n">mid</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">value</span><span class="p">:</span>
              <span class="n">left</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">right</span> <span class="o">=</span> <span class="n">mid</span><span class="o">-</span><span class="mi">1</span>
      <span class="k">return</span> <span class="n">left</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
      <span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">())</span>
      <span class="n">elec</span> <span class="o">=</span> <span class="nf">dict</span><span class="p">()</span>
      <span class="n">keys</span> <span class="o">=</span> <span class="nf">list</span><span class="p">()</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
          <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>
          <span class="n">keys</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
          <span class="n">elec</span><span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span>
    
      <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span>
            
      <span class="n">keys</span><span class="p">.</span><span class="nf">sort</span><span class="p">()</span> <span class="o">//</span> <span class="n">이분탐색을</span> <span class="n">위해</span> <span class="n">정렬한다</span><span class="p">.</span>
      <span class="n">lis</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="mi">0</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">))</span>
      <span class="n">lis</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">elec</span><span class="p">[</span><span class="n">keys</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span>
    
      <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
          <span class="n">value</span> <span class="o">=</span> <span class="n">elec</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
          <span class="k">if</span> <span class="n">lis</span><span class="p">[</span><span class="n">cnt</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">value</span><span class="p">:</span>
              <span class="n">lis</span><span class="p">[</span><span class="n">cnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
              <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">left</span> <span class="o">=</span> <span class="mi">0</span>
              <span class="n">right</span> <span class="o">=</span> <span class="n">cnt</span>
              <span class="n">ind</span> <span class="o">=</span> <span class="nf">bs</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
              <span class="n">lis</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
    
  		<span class="nf">print</span><span class="p">(</span><span class="n">N</span><span class="o">-</span><span class="n">cnt</span><span class="p">)</span>
</code></pre></div>    </div>

    <p>처음에는 cnt 업데이트 시 길이, 즉 수열이 증가하는 것이니까. 증가할 때마다 이전 수열과 값을 저장하고 나중에 출력하면 된다. 각각 lis[길이] 와 값을 비교할 때 분기처리가 되는데 각각 아래와 같이 추가하면, 겹치지 않는 최적의 수열을 구할 수 있다.</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">if</span> <span class="n">lis</span><span class="p">[</span><span class="n">길이</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">elec</span><span class="p">[</span><span class="n">key</span><span class="p">]:</span>
      <span class="n">group</span><span class="p">[</span><span class="n">cnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">group</span><span class="p">[</span><span class="n">cnt</span><span class="o">-</span><span class="mi">1</span><span class="p">][:]</span>
      <span class="n">group</span><span class="p">[</span><span class="n">cnt</span><span class="p">].</span><span class="nf">append</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
      <span class="k">if</span> <span class="n">ind</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
          <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="o">=</span> <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="o">-</span><span class="mi">1</span><span class="p">][:]</span>
          <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="p">].</span><span class="nf">append</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">key</span><span class="p">]</span>
</code></pre></div>    </div>

    <p>그 다음은 간단하다. group[cnt-1] 이 전깃줄이 겹치지 않는 최적의 수열이기때문에 해당 수열을 제외한 모든 값을 출력하면 된다.</p>
  </li>
  <li>
    <p>답안</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">def</span> <span class="nf">bs</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
      <span class="nf">while</span><span class="p">(</span><span class="n">left</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="p">):</span>
          <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
          <span class="k">if</span> <span class="n">lis</span><span class="p">[</span><span class="n">mid</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">value</span><span class="p">:</span>
              <span class="n">left</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">right</span> <span class="o">=</span> <span class="n">mid</span><span class="o">-</span><span class="mi">1</span>
      <span class="k">return</span> <span class="n">left</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
      <span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">())</span>
      <span class="n">elec</span> <span class="o">=</span> <span class="nf">dict</span><span class="p">()</span>
      <span class="n">keys</span> <span class="o">=</span> <span class="nf">list</span><span class="p">()</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
          <span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>
          <span class="n">keys</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
          <span class="n">elec</span><span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span>
    
      <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span>
            
      <span class="n">keys</span><span class="p">.</span><span class="nf">sort</span><span class="p">()</span>
      <span class="n">lis</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="mi">0</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">))</span>
      <span class="n">group</span> <span class="o">=</span> <span class="nf">dict</span><span class="p">()</span>
      <span class="n">lis</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">elec</span><span class="p">[</span><span class="n">keys</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span>
    
      <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
          <span class="n">value</span> <span class="o">=</span> <span class="n">elec</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
          <span class="k">if</span> <span class="n">lis</span><span class="p">[</span><span class="n">cnt</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">value</span><span class="p">:</span>
              <span class="n">lis</span><span class="p">[</span><span class="n">cnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
              <span class="n">group</span><span class="p">[</span><span class="n">cnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">group</span><span class="p">[</span><span class="n">cnt</span><span class="o">-</span><span class="mi">1</span><span class="p">][:]</span>
              <span class="n">group</span><span class="p">[</span><span class="n">cnt</span><span class="p">].</span><span class="nf">append</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
              <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">left</span> <span class="o">=</span> <span class="mi">0</span>
              <span class="n">right</span> <span class="o">=</span> <span class="n">cnt</span>
              <span class="n">ind</span> <span class="o">=</span> <span class="nf">bs</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
              <span class="n">lis</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
              <span class="k">if</span> <span class="n">ind</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
                  <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="o">=</span> <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="o">-</span><span class="mi">1</span><span class="p">][:]</span>
                  <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="p">].</span><span class="nf">append</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
              <span class="k">else</span><span class="p">:</span>
                  <span class="n">group</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">key</span><span class="p">]</span>
                
                
    
      <span class="nf">print</span><span class="p">(</span><span class="n">N</span><span class="o">-</span><span class="n">cnt</span><span class="p">)</span>
    
      <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">k</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">group</span><span class="p">[</span><span class="n">cnt</span><span class="o">-</span><span class="mi">1</span><span class="p">][:]:</span>
              <span class="nf">print</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="algorithms" /><category term="beakjoon" /><category term="python" /><category term="P5" /><summary type="html"><![CDATA[백준 문제 풀이]]></summary></entry><entry><title type="html">[12738] 가장 긴 증가하는 부분 수열 3</title><link href="http://localhost:4000/algorithms/beakjoon/2023-04-25-BOJ_12738_py/" rel="alternate" type="text/html" title="[12738] 가장 긴 증가하는 부분 수열 3" /><published>2023-04-25T00:00:00+09:00</published><updated>2023-04-25T15:53:30+09:00</updated><id>http://localhost:4000/algorithms/beakjoon/BOJ_12738_py</id><content type="html" xml:base="http://localhost:4000/algorithms/beakjoon/2023-04-25-BOJ_12738_py/"><![CDATA[<h3 id="문제-링크">문제 링크</h3>

<p><a href="https://www.acmicpc.net/problem/12738">12738번: 가장 긴 증가하는 부분 수열 3</a></p>

<ul>
  <li>
    <p>해설</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">다른</span> <span class="n">가장</span> <span class="n">긴</span> <span class="n">증가하는</span> <span class="n">부분</span> <span class="n">수열과</span> <span class="n">비슷한</span> <span class="n">문제이다</span><span class="p">.</span> <span class="nc">N </span><span class="p">(</span><span class="mi">1</span> <span class="err">≤</span> <span class="n">N</span> <span class="err">≤</span> <span class="mi">1</span><span class="p">,</span><span class="mi">000</span><span class="p">,</span><span class="mi">000</span><span class="p">)</span><span class="n">에</span> <span class="mi">3</span><span class="n">초이기</span> <span class="n">때문에</span> <span class="n">이분탐색을</span> <span class="n">사용하거나</span><span class="p">,</span>
  <span class="n">이중</span> <span class="n">포문을</span> <span class="n">사용하거나</span> <span class="n">둘중</span> <span class="n">아무거나</span> <span class="n">사용해도</span> <span class="n">시간에는</span> <span class="n">문제가</span> <span class="n">없을</span> <span class="n">것이다</span><span class="p">.</span>
    
  <span class="n">이번에는</span> <span class="n">이분탐색을</span> <span class="n">이용했다</span><span class="p">.</span>
    
  <span class="n">LIS</span> <span class="n">와</span> <span class="n">같이</span> <span class="n">길이에</span> <span class="n">따라</span> <span class="n">최대값을</span> <span class="n">lis</span> <span class="n">배열에</span> <span class="n">넣어두고</span><span class="p">,</span> <span class="n">해당</span> <span class="n">값</span> <span class="n">보다</span> <span class="n">큰</span> <span class="n">경우</span> <span class="o">+</span><span class="mi">1</span> <span class="n">을</span> <span class="n">시킨다</span><span class="p">.</span>
  <span class="n">아닌</span> <span class="n">경우에는</span> <span class="n">이분탐색을</span> <span class="n">통해서</span> <span class="n">들어갈</span> <span class="n">수</span> <span class="n">있는</span> <span class="n">길이에</span> <span class="n">업데이트</span> <span class="n">시킨다</span><span class="p">.</span>
    
</code></pre></div>    </div>
  </li>
  <li>
    <p>답안</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">def</span> <span class="nf">bs</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">i</span><span class="p">):</span>
      <span class="nf">while</span><span class="p">(</span><span class="n">left</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="p">):</span>
          <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">left</span><span class="o">+</span><span class="n">right</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span>
          <span class="k">if</span> <span class="n">lis</span><span class="p">[</span><span class="n">mid</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
              <span class="n">left</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">right</span> <span class="o">=</span> <span class="n">mid</span><span class="o">-</span><span class="mi">1</span>
      <span class="k">return</span> <span class="n">left</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
      <span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">())</span>
      <span class="n">nums</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
      <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span>
      <span class="n">lis</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span> <span class="mi">0</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">))</span>
      <span class="n">lis</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
          <span class="k">if</span> <span class="n">lis</span><span class="p">[</span><span class="n">cnt</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
              <span class="n">lis</span><span class="p">[</span><span class="n">cnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
              <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">left</span> <span class="o">=</span> <span class="mi">0</span>
              <span class="n">right</span> <span class="o">=</span> <span class="n">cnt</span>
              <span class="n">ind</span> <span class="o">=</span> <span class="nf">bs</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
              <span class="n">lis</span><span class="p">[</span><span class="n">ind</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
    
      <span class="nf">print</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="algorithms" /><category term="beakjoon" /><category term="python" /><category term="G2" /><summary type="html"><![CDATA[백준 문제 풀이]]></summary></entry><entry><title type="html">[2342] Dance Dance Revolution</title><link href="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_2342_py/" rel="alternate" type="text/html" title="[2342] Dance Dance Revolution" /><published>2023-04-19T00:00:00+09:00</published><updated>2023-04-24T18:37:49+09:00</updated><id>http://localhost:4000/algorithms/beakjoon/BOJ_2342_py</id><content type="html" xml:base="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_2342_py/"><![CDATA[<h3 id="문제-링크">문제 링크</h3>

<p><a href="https://www.acmicpc.net/problem/2342">2342번: Dance Dance Revolution</a></p>

<ul>
  <li>
    <p>해설</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">DDR</span><span class="err">?</span> <span class="n">게임에서</span> <span class="n">발을</span> <span class="n">어떻게</span> <span class="n">이동시키는</span> <span class="n">것이</span> <span class="n">힘이</span> <span class="n">덜</span> <span class="n">드는지</span> <span class="n">계산하는</span> <span class="n">방식이다</span><span class="p">.</span>
  <span class="n">처음에는</span> <span class="n">그리디</span><span class="p">(</span><span class="err">?</span><span class="p">)</span><span class="n">하게</span> <span class="n">움직이나</span> <span class="n">생각을</span> <span class="n">했는데</span> <span class="n">발을</span> <span class="n">움직일때</span> <span class="n">마다</span> <span class="n">최소가</span> <span class="n">되도록</span> <span class="n">선택하면</span> <span class="n">총합에서</span> <span class="n">더</span> <span class="n">크게</span> <span class="n">나오는</span> <span class="n">경우가</span> <span class="n">있었다</span><span class="p">.</span>
    
  <span class="n">즉</span> <span class="n">이</span> <span class="n">문제는</span> <span class="n">그리디가</span> <span class="n">아니라</span><span class="p">,</span> <span class="n">오른발</span> <span class="n">왼발을</span> <span class="n">각각</span> <span class="n">움직인</span> <span class="n">상태들</span> <span class="n">모두</span> <span class="n">기록해두고</span> <span class="n">최소값을</span> <span class="n">찾아야</span> <span class="n">한다</span><span class="p">.</span>
    
  <span class="n">예를</span> <span class="n">들면</span><span class="p">,</span> <span class="n">현재</span> <span class="n">발위치가</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span> <span class="n">이다</span><span class="p">.</span> <span class="n">처음에</span> <span class="mi">1</span><span class="n">번을</span> <span class="n">눌러라</span> <span class="n">라는</span> <span class="n">지시에</span> <span class="n">왼발을</span> <span class="n">쓸지</span><span class="p">,</span> <span class="n">오른발을</span> <span class="n">쓸지</span> <span class="n">경우의</span> <span class="n">수가</span> <span class="n">나뉘게</span> <span class="n">된다</span><span class="p">.</span>
  <span class="n">그러면</span> <span class="n">현재</span> <span class="n">발</span> <span class="n">위치에서</span> <span class="n">왼발을</span> <span class="n">변경하면</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span><span class="n">이</span> <span class="n">되고</span><span class="p">,</span> <span class="n">오른발을</span> <span class="n">움직이면</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="n">이</span> <span class="n">된다</span><span class="p">.</span> 
  <span class="n">다음</span> <span class="n">지시에서는</span> <span class="mi">2</span><span class="n">를</span> <span class="n">눌러라</span> <span class="n">라는</span> <span class="n">지시가</span> <span class="n">있다면</span><span class="p">..</span> <span class="n">또</span> <span class="n">총</span> <span class="n">경우의</span> <span class="n">수가</span> <span class="mi">4</span><span class="n">개가</span> <span class="n">된다</span><span class="p">.</span>
    
  <span class="n">즉</span><span class="p">,</span> <span class="n">지시를</span> <span class="n">따를때마다</span> <span class="n">경우의</span> <span class="n">수가</span> <span class="mi">2</span><span class="n">배가</span> <span class="n">되는데</span><span class="p">,</span> <span class="n">이러면</span> <span class="n">경우의</span> <span class="n">수가</span> <span class="n">너무</span> <span class="n">많아</span> <span class="n">메모리</span> <span class="n">초과가</span> <span class="n">일어날</span> <span class="n">수</span> <span class="n">있다</span><span class="p">.</span>
    
  <span class="n">그래서</span> <span class="n">나는</span> <span class="n">발의</span> <span class="n">위치를</span> <span class="n">해시로</span> <span class="n">최솟값</span><span class="p">(</span><span class="n">현재</span> <span class="n">스텝의</span> <span class="n">최솟값</span><span class="p">)</span><span class="n">을</span> <span class="n">넣도록</span> <span class="n">처리했다</span><span class="p">.</span> <span class="n">이러면</span> <span class="n">무수한</span> <span class="n">경우의</span> <span class="n">수</span> <span class="n">중</span> <span class="n">유의미한</span> <span class="n">값만</span>
  <span class="n">처리</span> <span class="n">할</span> <span class="n">수</span> <span class="n">있다</span><span class="p">.</span>
    
  <span class="n">하나씩</span> <span class="n">설명하면</span> <span class="n">다음과</span> <span class="n">같다</span><span class="p">.</span>
    
  <span class="n">우선</span> <span class="n">저장해야하는</span> <span class="n">값이</span><span class="p">,</span> <span class="n">왼발</span><span class="p">,</span> <span class="n">오른발</span> <span class="n">위치</span><span class="p">,</span> <span class="n">이제까지</span> <span class="n">든</span> <span class="n">힘으로</span> <span class="mi">3</span><span class="n">가지를</span> <span class="n">각각</span> <span class="n">경우의</span> <span class="n">수마다</span> <span class="n">저장해야한다</span><span class="p">.</span>
  <span class="n">위에서</span> <span class="n">이야기한데로</span> <span class="n">해시로</span> <span class="n">처리하는데</span> <span class="n">각</span> <span class="n">경우의</span> <span class="n">수는</span> <span class="n">왼발</span><span class="p">,</span> <span class="n">오른발로</span> <span class="n">결정되기</span> <span class="n">때문에</span> <span class="n">왼발</span> <span class="n">오른발을</span> <span class="n">튜플로</span> <span class="n">두고</span><span class="p">,</span>
  <span class="n">해당</span> <span class="n">값을</span> <span class="n">해시의</span> <span class="n">키값으로</span> <span class="n">지정한다</span><span class="p">.</span>
    
  <span class="n">steps</span> <span class="o">=</span> <span class="p">{(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">):</span> <span class="mi">0</span><span class="p">}</span>
  <span class="n">현재</span> <span class="n">발의</span> <span class="n">위치를</span> <span class="n">steps</span> <span class="n">라는</span> <span class="n">해시에</span> <span class="n">담는다</span><span class="p">.</span> <span class="n">처음에는</span> <span class="n">둘다</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span><span class="n">에</span> <span class="n">있기</span> <span class="n">때문에</span> <span class="n">초기값을</span> <span class="n">설정한다</span><span class="p">.</span>
  <span class="n">각각</span> <span class="n">지시</span><span class="p">(</span><span class="n">nums로</span> <span class="n">두었다</span><span class="p">.)</span><span class="n">에</span> <span class="n">따라서</span> <span class="n">왼발</span><span class="p">,</span> <span class="n">오른발을</span> <span class="n">움직인다</span><span class="p">.</span>
    
  <span class="n">다음</span> <span class="n">함수를</span> <span class="n">통해서</span> <span class="n">현재</span> <span class="n">발의</span> <span class="n">위치와</span> <span class="n">다음</span> <span class="n">발의</span> <span class="n">위치를</span> <span class="n">비교해서</span> <span class="n">드는</span> <span class="n">힘을</span> <span class="n">반환한다</span><span class="p">.</span>
  <span class="k">def</span> <span class="nf">move_step</span><span class="p">(</span><span class="n">step</span><span class="p">,</span> <span class="n">next_step</span><span class="p">,</span> <span class="n">power</span><span class="p">):</span>
      <span class="n">move</span> <span class="o">=</span> <span class="nf">abs</span><span class="p">(</span><span class="nf">int</span><span class="p">(</span><span class="n">next_step</span> <span class="o">-</span> <span class="n">step</span><span class="p">))</span>
      <span class="n">npower</span> <span class="o">=</span> <span class="n">power</span>
      <span class="k">if</span> <span class="n">step</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
          <span class="n">npower</span> <span class="o">+=</span> <span class="mi">2</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">move</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">npower</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">elif</span> <span class="n">move</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
              <span class="n">npower</span> <span class="o">+=</span> <span class="mi">4</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">npower</span> <span class="o">+=</span> <span class="mi">3</span>
      <span class="k">return</span> <span class="n">npower</span>
    
  <span class="n">움직일</span> <span class="n">때</span> <span class="n">힘을</span> <span class="n">계산하는</span> <span class="n">함수가</span> <span class="n">있으니</span><span class="p">,</span> <span class="n">현재</span> <span class="n">발</span> <span class="n">위치</span><span class="p">(</span><span class="n">steps</span><span class="p">)</span><span class="n">의</span> <span class="n">키값을</span> <span class="n">가져온다</span><span class="p">.</span>
  	<span class="k">for</span> <span class="n">step</span> <span class="ow">in</span> <span class="n">steps</span><span class="p">:</span>
          <span class="n">left</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="n">step</span> 
          <span class="n">power</span> <span class="o">=</span> <span class="n">steps</span><span class="p">[</span><span class="n">step</span><span class="p">]</span>
          <span class="n">npower</span> <span class="o">=</span> <span class="nf">move_step</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">next_step</span><span class="p">,</span> <span class="n">power</span><span class="p">)</span>
          <span class="k">if</span> <span class="n">npower</span> <span class="o">&lt;</span> <span class="n">nstep</span><span class="p">.</span><span class="nf">get</span><span class="p">((</span><span class="n">next_step</span><span class="p">,</span> <span class="n">right</span><span class="p">),</span> <span class="n">sys</span><span class="p">.</span><span class="n">maxsize</span><span class="p">):</span>
              <span class="n">nstep</span><span class="p">[(</span><span class="n">next_step</span><span class="p">,</span> <span class="n">right</span><span class="p">)]</span> <span class="o">=</span> <span class="n">npower</span>
    
          <span class="n">npower</span> <span class="o">=</span> <span class="nf">move_step</span><span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">next_step</span><span class="p">,</span> <span class="n">power</span><span class="p">)</span>
          <span class="k">if</span> <span class="n">npower</span> <span class="o">&lt;</span> <span class="n">nstep</span><span class="p">.</span><span class="nf">get</span><span class="p">((</span><span class="n">left</span><span class="p">,</span> <span class="n">next_step</span><span class="p">),</span> <span class="n">sys</span><span class="p">.</span><span class="n">maxsize</span><span class="p">):</span>
              <span class="n">nstep</span><span class="p">[(</span><span class="n">left</span><span class="p">,</span> <span class="n">next_step</span><span class="p">)]</span> <span class="o">=</span> <span class="n">npower</span>
      <span class="n">steps</span> <span class="o">=</span> <span class="n">nstep</span>
    
  <span class="n">위</span> <span class="n">코드</span> <span class="n">처럼</span> <span class="n">각각</span> <span class="n">왼발</span><span class="p">,</span> <span class="n">오른발</span> <span class="n">드는</span> <span class="n">힘을</span> <span class="n">저장하고</span><span class="p">,</span> <span class="n">move_step이라는</span> <span class="n">함수로</span> <span class="n">왼발</span><span class="p">,</span> <span class="n">오른발일때</span> <span class="n">값을</span> <span class="n">찾는다</span><span class="p">.</span>
  <span class="n">이러면</span> <span class="n">현재</span> <span class="n">지시에</span> <span class="n">따른</span> <span class="n">경우의</span> <span class="n">수가</span> <span class="n">nstep에</span> <span class="n">저장한다</span><span class="p">.</span>
  <span class="n">nsteps에는</span> <span class="n">n번째</span> <span class="n">지시에</span> <span class="n">따른</span> <span class="n">모든</span> <span class="n">경우의</span> <span class="n">수가</span> <span class="n">저장되어서</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span> <span class="n">지시에서는</span> <span class="n">현재</span> <span class="n">발의</span> <span class="n">위치로</span> <span class="n">전환된다</span><span class="p">.</span>
    
  <span class="n">즉</span><span class="p">,</span> <span class="n">경우의</span> <span class="n">수를</span> <span class="n">구하고</span> <span class="n">현재</span> <span class="n">발의</span> <span class="n">위치를</span> <span class="n">해당</span> <span class="n">경우의</span> <span class="n">수로</span> <span class="n">전환하면</span><span class="p">,</span> <span class="n">마지막에는</span> <span class="n">이</span> <span class="n">경우의</span> <span class="n">수</span> <span class="n">중</span> <span class="n">가장</span> <span class="n">작은</span> <span class="n">값을</span> <span class="n">출력하면</span> <span class="n">된다</span><span class="p">.</span> 
    
  		<span class="nb">min</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">maxsize</span>
      <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">steps</span><span class="p">:</span>
          <span class="k">if</span> <span class="nb">min</span> <span class="o">&gt;</span> <span class="n">steps</span><span class="p">[</span><span class="n">j</span><span class="p">]:</span>
              <span class="nb">min</span> <span class="o">=</span> <span class="n">steps</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
    
      <span class="nf">print</span><span class="p">(</span><span class="nb">min</span><span class="p">)</span>
    
</code></pre></div>    </div>
  </li>
  <li>
    <p>답안</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">def</span> <span class="nf">move_step</span><span class="p">(</span><span class="n">step</span><span class="p">,</span> <span class="n">next_step</span><span class="p">,</span> <span class="n">power</span><span class="p">):</span>
      <span class="n">move</span> <span class="o">=</span> <span class="nf">abs</span><span class="p">(</span><span class="nf">int</span><span class="p">(</span><span class="n">next_step</span> <span class="o">-</span> <span class="n">step</span><span class="p">))</span>
      <span class="n">npower</span> <span class="o">=</span> <span class="n">power</span>
      <span class="k">if</span> <span class="n">step</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
          <span class="n">npower</span> <span class="o">+=</span> <span class="mi">2</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">move</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">npower</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">elif</span> <span class="n">move</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
              <span class="n">npower</span> <span class="o">+=</span> <span class="mi">4</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">npower</span> <span class="o">+=</span> <span class="mi">3</span>
      <span class="k">return</span> <span class="n">npower</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
      <span class="n">nums</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
    
      <span class="n">steps</span> <span class="o">=</span> <span class="p">{(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">):</span> <span class="mi">0</span><span class="p">}</span>
      <span class="n">count</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">count</span><span class="p">):</span>
          <span class="n">nstep</span> <span class="o">=</span> <span class="p">{}</span>
          <span class="n">next_step</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
          <span class="k">for</span> <span class="n">step</span> <span class="ow">in</span> <span class="n">steps</span><span class="p">:</span>
              <span class="n">left</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="n">step</span>
              <span class="n">power</span> <span class="o">=</span> <span class="n">steps</span><span class="p">[</span><span class="n">step</span><span class="p">]</span>
              <span class="n">npower</span> <span class="o">=</span> <span class="nf">move_step</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">next_step</span><span class="p">,</span> <span class="n">power</span><span class="p">)</span>
              <span class="k">if</span> <span class="n">npower</span> <span class="o">&lt;</span> <span class="n">nstep</span><span class="p">.</span><span class="nf">get</span><span class="p">((</span><span class="n">next_step</span><span class="p">,</span> <span class="n">right</span><span class="p">),</span> <span class="n">sys</span><span class="p">.</span><span class="n">maxsize</span><span class="p">):</span>
                  <span class="n">nstep</span><span class="p">[(</span><span class="n">next_step</span><span class="p">,</span> <span class="n">right</span><span class="p">)]</span> <span class="o">=</span> <span class="n">npower</span>
    
              <span class="n">npower</span> <span class="o">=</span> <span class="nf">move_step</span><span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">next_step</span><span class="p">,</span> <span class="n">power</span><span class="p">)</span>
              <span class="k">if</span> <span class="n">npower</span> <span class="o">&lt;</span> <span class="n">nstep</span><span class="p">.</span><span class="nf">get</span><span class="p">((</span><span class="n">left</span><span class="p">,</span> <span class="n">next_step</span><span class="p">),</span> <span class="n">sys</span><span class="p">.</span><span class="n">maxsize</span><span class="p">):</span>
                  <span class="n">nstep</span><span class="p">[(</span><span class="n">left</span><span class="p">,</span> <span class="n">next_step</span><span class="p">)]</span> <span class="o">=</span> <span class="n">npower</span>
          <span class="n">steps</span> <span class="o">=</span> <span class="n">nstep</span>
            
      <span class="nb">min</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">maxsize</span>
      <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">steps</span><span class="p">:</span>
          <span class="k">if</span> <span class="nb">min</span> <span class="o">&gt;</span> <span class="n">steps</span><span class="p">[</span><span class="n">j</span><span class="p">]:</span>
              <span class="nb">min</span> <span class="o">=</span> <span class="n">steps</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
    
      <span class="nf">print</span><span class="p">(</span><span class="nb">min</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="algorithms" /><category term="beakjoon" /><category term="python" /><category term="G3" /><summary type="html"><![CDATA[백준 문제 풀이]]></summary></entry><entry><title type="html">[2630] 색종이 만들기</title><link href="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_2630_py/" rel="alternate" type="text/html" title="[2630] 색종이 만들기" /><published>2023-04-19T00:00:00+09:00</published><updated>2023-04-24T18:37:49+09:00</updated><id>http://localhost:4000/algorithms/beakjoon/BOJ_2630_py</id><content type="html" xml:base="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_2630_py/"><![CDATA[<h3 id="문제-링크">문제 링크</h3>

<p><a href="https://www.acmicpc.net/problem/2630">2630번: 색종이 만들기</a></p>

<ul>
  <li>
    <p>해설</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">종이의</span> <span class="n">색깔이</span> <span class="n">지정되어있고</span><span class="p">,</span> <span class="n">정사각형</span> <span class="n">모양으로</span> <span class="mi">4</span><span class="n">등분해서</span> <span class="n">같은</span> <span class="n">색</span> <span class="n">종이로만</span> <span class="n">분해하는</span> <span class="n">것이</span> <span class="n">목적이고</span><span class="p">,</span> <span class="n">각</span> <span class="n">색깔별로</span> <span class="n">개수를</span> <span class="n">출력해야한다</span><span class="p">.</span>
  <span class="n">종이의</span> <span class="n">개수는</span> <span class="n">하얀색</span> <span class="n">W</span><span class="p">,</span> <span class="n">파란색</span> <span class="n">B에</span> <span class="n">담는다</span><span class="p">.</span>
    
  <span class="n">큰</span> <span class="n">종이가</span> <span class="n">있는</span> <span class="n">상태에서</span> <span class="mi">4</span><span class="n">조각으로</span> <span class="n">나누어서</span> <span class="n">색이</span> <span class="n">다른</span> <span class="n">경우에는</span> <span class="n">다시</span> <span class="n">쪼개는</span> <span class="n">패턴이</span> <span class="n">있다</span><span class="p">.</span>
  <span class="n">그러면</span> <span class="n">생각해야되는</span> <span class="n">부분이</span> <span class="n">종이의</span> <span class="n">색이</span> <span class="n">다른가</span><span class="err">?</span> <span class="n">를</span> <span class="n">체크하는</span> <span class="n">방식인데</span><span class="p">..</span>
    
  <span class="n">정말</span> <span class="n">다행이도</span> <span class="n">N이</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">128</span> <span class="n">중</span> <span class="n">하나라고</span> <span class="n">나타나있어서</span> <span class="n">최대</span> <span class="mi">128</span><span class="n">일때</span> <span class="n">이중</span> <span class="n">for문을</span> <span class="n">이용해서</span>
  <span class="n">각</span> <span class="n">종이의</span> <span class="n">색을</span> <span class="n">일일히</span> <span class="n">체크하는</span> <span class="n">방식으로</span> <span class="n">해도</span> <span class="n">시간초과가</span> <span class="n">걸리지</span> <span class="n">않을</span> <span class="n">것이다</span><span class="p">.</span>
    
  <span class="n">방법은</span> <span class="n">단순하다</span><span class="p">.</span>
    
  <span class="mf">1.</span><span class="n">왼쪽</span> <span class="n">위</span> <span class="n">좌표와</span> <span class="n">오른쪽</span> <span class="n">아래</span> <span class="n">좌표를</span> <span class="n">받는</span> <span class="n">diff_color</span> <span class="n">라는</span> <span class="n">함수를</span> <span class="n">작성한다</span><span class="p">.</span>
  	<span class="o">-</span> <span class="n">해당</span> <span class="n">함수에서는</span> <span class="n">좌표</span> <span class="n">사이에</span> <span class="n">색이</span> <span class="n">다른</span> <span class="n">것이</span> <span class="n">있는지</span> <span class="n">체크한다</span><span class="p">.</span>
    
  <span class="k">def</span> <span class="nf">diff_color</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">y2</span><span class="p">):</span>
      <span class="n">color</span> <span class="o">=</span> <span class="n">papers</span><span class="p">[</span><span class="n">x1</span><span class="p">][</span><span class="n">y1</span><span class="p">]</span>
      <span class="n">is_same</span> <span class="o">=</span> <span class="bp">True</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">):</span>
          <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">y1</span><span class="p">,</span> <span class="n">y2</span><span class="p">):</span>
              <span class="k">if</span> <span class="n">color</span> <span class="o">!=</span> <span class="n">papers</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]:</span>
                  <span class="n">is_same</span> <span class="o">=</span> <span class="bp">False</span>
                  <span class="k">break</span>
    
  <span class="mf">2.</span> <span class="n">만약</span> <span class="n">해당</span> <span class="n">범위의</span> <span class="n">색이</span> <span class="n">같으면</span> <span class="n">True를</span> <span class="n">반환하는데</span><span class="p">,</span> <span class="bp">True</span> <span class="n">일때</span> <span class="n">해당</span> <span class="n">종의의</span> <span class="n">색</span> <span class="n">카운트를</span> <span class="o">+</span><span class="mi">1</span> <span class="n">한다</span><span class="p">.</span>
  	<span class="k">if</span> <span class="n">is_same</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">color</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">W</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">B</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">return</span>
    
  <span class="mf">3.</span> <span class="n">색이</span> <span class="n">다른</span> <span class="n">경우</span><span class="p">...</span> <span class="mi">4</span><span class="n">조각으로</span> <span class="n">나누어야</span> <span class="n">하는데</span><span class="p">,</span> <span class="n">단순히</span> <span class="n">search</span> <span class="n">를</span> <span class="mi">4</span><span class="n">조각의</span> <span class="n">범위에</span> <span class="n">맞게</span> <span class="n">호출하면</span> <span class="n">된다</span><span class="p">.</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="nf">diff_color</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="p">(</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">)</span>
          <span class="nf">diff_color</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y2</span><span class="p">)</span>
          <span class="nf">diff_color</span><span class="p">((</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">)</span>
          <span class="nf">diff_color</span><span class="p">((</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">y2</span><span class="p">)</span>
    
  <span class="n">여기서</span> <span class="n">문제는</span> <span class="n">DP가</span> <span class="n">되는데</span> <span class="mi">4</span><span class="n">조각으로</span> <span class="n">나눌수</span> <span class="n">없을때까지</span> <span class="n">나눌</span> <span class="n">수</span> <span class="n">있기</span> <span class="n">때문에</span> <span class="n">나눌</span> <span class="n">수</span> <span class="n">없을때</span> <span class="n">값을</span> <span class="n">반환해주어야</span> <span class="n">한다</span><span class="p">.</span>
  <span class="n">나눌</span> <span class="n">수</span> <span class="n">없다는</span> <span class="n">것은</span> <span class="n">한변의</span> <span class="n">길이가</span> <span class="mi">1</span><span class="n">이면</span> <span class="n">나눌수</span> <span class="n">없기</span> <span class="n">때문에</span> <span class="n">해당</span> <span class="n">조건을</span> <span class="n">추가해준다</span><span class="p">.</span>
  	<span class="k">if</span> <span class="nf">abs</span><span class="p">(</span><span class="n">x2</span> <span class="o">-</span> <span class="n">x1</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">color</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">W</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">B</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">return</span>
    
  <span class="n">이러면</span> <span class="n">DP로</span> <span class="n">한변의</span> <span class="n">길이가</span> <span class="mi">1</span><span class="n">일때</span> <span class="n">해당</span> <span class="n">종이의</span> <span class="n">숫자를</span> <span class="o">+</span><span class="mi">1</span> <span class="n">해서</span> <span class="k">return</span> <span class="n">하기</span> <span class="n">때문에</span> <span class="n">가장</span> <span class="n">작은</span> <span class="n">종의의</span> <span class="n">수까지</span> <span class="n">DP</span> <span class="n">스택이</span> <span class="n">된다</span><span class="p">.</span>
  <span class="n">여기까지</span> <span class="n">오면</span><span class="p">,</span> <span class="n">같은</span> <span class="n">색의</span> <span class="n">가장</span> <span class="n">작은</span> <span class="n">단위의</span> <span class="n">종이까지</span> <span class="n">탐색하게</span> <span class="n">되어서</span> <span class="n">모든</span> <span class="n">색</span> <span class="n">종이의</span> <span class="n">수를</span> <span class="n">각각</span> <span class="n">출력할</span> <span class="n">수</span> <span class="n">있다</span><span class="p">.</span>
    
</code></pre></div>    </div>
  </li>
  <li>
    <p>답안</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">def</span> <span class="nf">diff_color</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">y2</span><span class="p">):</span>
      <span class="n">color</span> <span class="o">=</span> <span class="n">papers</span><span class="p">[</span><span class="n">x1</span><span class="p">][</span><span class="n">y1</span><span class="p">]</span>
      <span class="k">global</span> <span class="n">W</span>
      <span class="k">global</span> <span class="n">B</span>
      <span class="k">if</span> <span class="nf">abs</span><span class="p">(</span><span class="n">x2</span> <span class="o">-</span> <span class="n">x1</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">color</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">W</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">B</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">return</span>
    
      <span class="n">is_same</span> <span class="o">=</span> <span class="bp">True</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">):</span>
          <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">y1</span><span class="p">,</span> <span class="n">y2</span><span class="p">):</span>
              <span class="k">if</span> <span class="n">color</span> <span class="o">!=</span> <span class="n">papers</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]:</span>
                  <span class="n">is_same</span> <span class="o">=</span> <span class="bp">False</span>
                  <span class="k">break</span>
    
      <span class="k">if</span> <span class="n">is_same</span><span class="p">:</span>
          <span class="k">if</span> <span class="n">color</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">W</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">B</span> <span class="o">+=</span> <span class="mi">1</span>
          <span class="k">return</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="nf">diff_color</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="p">(</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">)</span>
          <span class="nf">diff_color</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y2</span><span class="p">)</span>
          <span class="nf">diff_color</span><span class="p">((</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">)</span>
          <span class="nf">diff_color</span><span class="p">((</span><span class="n">x1</span> <span class="o">+</span> <span class="n">x2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="p">(</span><span class="n">y1</span> <span class="o">+</span> <span class="n">y2</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">y2</span><span class="p">)</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
      <span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">())</span>
      <span class="n">papers</span> <span class="o">=</span> <span class="nf">list</span><span class="p">()</span>
      <span class="n">W</span> <span class="o">=</span> <span class="mi">0</span>
      <span class="n">B</span> <span class="o">=</span> <span class="mi">0</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
          <span class="n">colors</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
          <span class="n">papers</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">colors</span><span class="p">)</span>
    
      <span class="nf">diff_color</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">N</span><span class="p">)</span>
    
      <span class="nf">print</span><span class="p">(</span><span class="n">W</span><span class="p">)</span>
      <span class="nf">print</span><span class="p">(</span><span class="n">B</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="algorithms" /><category term="beakjoon" /><category term="python" /><category term="S2" /><summary type="html"><![CDATA[백준 문제 풀이]]></summary></entry><entry><title type="html">[10773] 제로</title><link href="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_10773_py/" rel="alternate" type="text/html" title="[10773] 제로" /><published>2023-04-19T00:00:00+09:00</published><updated>2023-04-24T18:37:49+09:00</updated><id>http://localhost:4000/algorithms/beakjoon/BOJ_10773_py</id><content type="html" xml:base="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_10773_py/"><![CDATA[<h3 id="문제-링크">문제 링크</h3>

<p><a href="https://www.acmicpc.net/problem/10773">10773번: 제로</a></p>

<ul>
  <li>
    <p>해설</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">문제</span> <span class="n">그대로</span> <span class="mi">0</span><span class="n">이</span> <span class="n">아닌</span> <span class="n">경우</span> <span class="n">리스트에</span> <span class="n">담아둔다</span><span class="p">.</span>
  <span class="mi">0</span><span class="n">인</span> <span class="n">경우에는</span> <span class="n">nums에</span> <span class="n">추가를</span> <span class="n">해두어서</span> <span class="n">최근에</span> <span class="n">담은</span> <span class="n">것을</span> <span class="n">pop한다</span><span class="p">.</span>
    
  <span class="n">pop을</span> <span class="n">하면</span> <span class="n">리스트에서</span> <span class="n">제거</span> <span class="n">되기</span> <span class="n">때문에</span> <span class="n">담은</span> <span class="n">리스트를</span> <span class="n">모두</span> <span class="nb">sum</span> <span class="n">하면</span>
  <span class="n">된다</span><span class="p">.</span>
    
</code></pre></div>    </div>
  </li>
  <li>
    <p>답안</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
      <span class="n">K</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">())</span>
      <span class="n">nums</span> <span class="o">=</span> <span class="p">[]</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">K</span><span class="p">):</span>
          <span class="n">num</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">())</span>
          <span class="k">if</span> <span class="n">num</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">nums</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="n">nums</span><span class="p">.</span><span class="nf">pop</span><span class="p">()</span>
    
      <span class="nf">print</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="n">nums</span><span class="p">))</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="algorithms" /><category term="beakjoon" /><category term="python" /><category term="S4" /><summary type="html"><![CDATA[백준 문제 풀이]]></summary></entry><entry><title type="html">[10828] 스택</title><link href="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_10828_py/" rel="alternate" type="text/html" title="[10828] 스택" /><published>2023-04-19T00:00:00+09:00</published><updated>2023-04-24T18:37:49+09:00</updated><id>http://localhost:4000/algorithms/beakjoon/BOJ_10828_py</id><content type="html" xml:base="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_10828_py/"><![CDATA[<h3 id="문제-링크">문제 링크</h3>

<p><a href="https://www.acmicpc.net/problem/10828">10828번: 스택</a></p>

<ul>
  <li>
    <p>해설</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">자료구조</span> <span class="n">시간에</span> <span class="n">스택에</span> <span class="n">대한</span> <span class="n">내용을</span> <span class="n">배웠을</span> <span class="n">것이다</span><span class="p">.</span>
  <span class="n">각각</span> <span class="n">명령어에</span> <span class="n">따라서</span> <span class="n">조건에</span> <span class="n">맞게</span> <span class="n">프린트하면</span> <span class="n">된다</span><span class="p">.</span>
    
  <span class="n">push</span> <span class="o">-&gt;</span> <span class="n">스택에</span> <span class="n">추가</span> <span class="p">(</span><span class="o">==</span> <span class="n">stack</span><span class="p">.</span><span class="n">append</span><span class="p">)</span>
  <span class="n">top</span> <span class="o">-&gt;</span> <span class="n">스택</span> <span class="n">가장</span> <span class="n">위에</span> <span class="n">있는</span> <span class="n">것을</span> <span class="n">출력</span> <span class="n">리스트</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">pop</span> <span class="o">-&gt;</span> <span class="n">스택</span> <span class="n">가장</span> <span class="n">위에</span> <span class="n">있는</span> <span class="n">것을</span> <span class="n">빼온다</span><span class="p">.</span> <span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="n">pop</span><span class="p">)</span>
  <span class="n">size</span> <span class="o">-&gt;</span> <span class="n">stack의</span> <span class="n">사이즈</span>
  <span class="n">empty</span> <span class="o">-&gt;</span> <span class="n">stack의</span> <span class="n">길이가</span> <span class="mi">0</span> <span class="n">인지</span> <span class="n">판단</span><span class="p">.</span>
    
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
      <span class="n">strings</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
    
  <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">)</span> <span class="n">을</span> <span class="n">통해서</span> <span class="n">한</span> <span class="n">줄</span> <span class="n">씩</span> <span class="n">명령어를</span> <span class="n">받는다</span><span class="p">.</span>
  <span class="n">해당</span> <span class="n">strings가</span> <span class="n">입력</span> <span class="n">받은</span> <span class="n">한줄이고</span><span class="p">,</span> <span class="n">공백에</span> <span class="n">따라서</span> <span class="n">분리된다</span><span class="p">.</span>
    
  <span class="n">ex</span><span class="p">)</span> <span class="n">push</span> <span class="mi">3</span> 
  <span class="n">이라고</span> <span class="n">입력하면</span>
  <span class="n">strings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">'push'</span>
  <span class="n">strings</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">3</span>
  <span class="n">이</span> <span class="n">들어간다</span><span class="p">.</span>
    
  <span class="n">각각</span> <span class="n">명령어는</span> <span class="n">strings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="n">이</span> <span class="n">반드시</span> <span class="n">있고</span><span class="p">,</span> <span class="n">그</span> <span class="n">값에</span> <span class="n">따라서</span> <span class="n">기능이</span>
  <span class="n">달라지기</span> <span class="n">떄문에</span> <span class="n">해당</span> <span class="n">값을</span> <span class="n">분기처리하면</span> <span class="n">된다</span><span class="p">.</span>
    
  <span class="n">case</span> <span class="n">문을</span> <span class="n">사용할</span> <span class="n">지</span><span class="p">,</span> <span class="k">if</span> <span class="n">문을</span> <span class="n">사용할지</span> <span class="n">취양에</span> <span class="n">맞게</span> <span class="n">사용하면</span> <span class="n">된다</span><span class="p">.</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>답안</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
      <span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">())</span>
      <span class="n">stack</span> <span class="o">=</span> <span class="p">[]</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
          <span class="n">strings</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
          <span class="k">if</span> <span class="n">strings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">'push'</span><span class="p">:</span>
              <span class="n">stack</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nf">int</span><span class="p">(</span><span class="n">strings</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
          <span class="k">elif</span> <span class="n">strings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">'top'</span><span class="p">:</span>
              <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">stack</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                  <span class="nf">print</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
              <span class="k">else</span><span class="p">:</span>
                  <span class="nf">print</span><span class="p">(</span><span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
          <span class="k">elif</span> <span class="n">strings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">'pop'</span><span class="p">:</span>
              <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">stack</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                  <span class="nf">print</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
              <span class="k">else</span><span class="p">:</span>
                  <span class="nf">print</span><span class="p">(</span><span class="n">stack</span><span class="p">.</span><span class="nf">pop</span><span class="p">())</span>
          <span class="k">elif</span> <span class="n">strings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">'size'</span><span class="p">:</span>
              <span class="nf">print</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">stack</span><span class="p">))</span>
          <span class="k">elif</span> <span class="n">strings</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">'empty'</span><span class="p">:</span>
              <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">stack</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                  <span class="nf">print</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
              <span class="k">else</span><span class="p">:</span>
                  <span class="nf">print</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="algorithms" /><category term="beakjoon" /><category term="python" /><category term="S4" /><summary type="html"><![CDATA[백준 문제 풀이]]></summary></entry><entry><title type="html">[1541] 잃어버린 괄호</title><link href="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_1541_py/" rel="alternate" type="text/html" title="[1541] 잃어버린 괄호" /><published>2023-04-19T00:00:00+09:00</published><updated>2023-04-24T18:37:49+09:00</updated><id>http://localhost:4000/algorithms/beakjoon/BOJ_1541_py</id><content type="html" xml:base="http://localhost:4000/algorithms/beakjoon/2023-04-19-BOJ_1541_py/"><![CDATA[<p>level: Sliver 2</p>

<h3 id="문제-링크">문제 링크</h3>

<p><a href="https://www.acmicpc.net/problem/1541">1541번: 잃어버린 괄호</a></p>

<ul>
  <li>
    <p>해설</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="o">+</span><span class="p">,</span><span class="o">-</span><span class="n">가</span> <span class="n">있는</span> <span class="n">식에서</span> <span class="n">괄호를</span> <span class="n">쳐서</span> <span class="n">값을</span> <span class="n">최소로</span> <span class="n">만드는</span> <span class="n">문제이다</span><span class="p">...</span><span class="err">!</span>
  <span class="n">사실</span> <span class="n">최소로</span> <span class="n">만든다는</span> <span class="n">것에</span> <span class="n">초점을</span> <span class="n">주면</span> <span class="o">-</span><span class="n">가</span> <span class="n">붙은</span> <span class="n">값을</span> <span class="n">크게</span> <span class="n">만들면</span> <span class="n">된다</span><span class="p">.</span> 
  <span class="n">포인트는</span> <span class="n">괄호를</span> <span class="n">치면</span> <span class="n">분배</span> <span class="n">법칙에</span> <span class="n">의해서</span> <span class="o">+</span><span class="n">를</span> <span class="o">-</span><span class="n">로</span> <span class="n">바꿀</span> <span class="n">수</span> <span class="n">있다는</span> <span class="n">점이다</span><span class="p">.</span>
    
  <span class="n">따라서</span> <span class="o">-</span> <span class="n">와</span> <span class="o">-</span> <span class="n">사이에</span> <span class="n">것들을</span> <span class="n">괄호치면</span> <span class="n">된다</span><span class="p">.</span> <span class="n">이를</span> <span class="n">이용하면</span><span class="p">...</span>
    
  <span class="mf">1.</span> <span class="o">+</span><span class="n">를</span> <span class="s">' '</span><span class="n">로</span> <span class="n">대체하고</span><span class="p">,</span> <span class="o">-</span><span class="n">를</span> <span class="s">' -'</span><span class="n">로</span> <span class="n">대체한다</span><span class="p">.</span> <span class="p">(</span><span class="n">공백이</span> <span class="n">무조건</span> <span class="n">있어야</span> <span class="n">한다</span><span class="p">.)</span>
  <span class="mf">2.</span> <span class="n">공백이</span> <span class="n">있다면</span> <span class="n">split을</span> <span class="n">이용할</span> <span class="n">수</span> <span class="n">있기</span> <span class="n">때문에</span> <span class="n">이를</span> <span class="n">리스트로</span> <span class="n">넣을</span> <span class="n">수</span> <span class="n">있다</span><span class="p">.</span>
  <span class="mf">3.</span> <span class="n">list로</span> <span class="n">하나씩</span> <span class="n">살펴가면서</span> <span class="n">음수일</span> <span class="n">때</span> <span class="n">플래그를</span> <span class="n">활성화</span> <span class="n">시키고</span><span class="p">,</span> <span class="n">이후</span> <span class="n">나오는</span> <span class="n">양수는</span> <span class="o">-</span><span class="n">로</span> <span class="n">치환한다</span><span class="p">.</span> <span class="p">(</span><span class="n">플래그를</span> <span class="n">negative로</span> <span class="n">정의함</span><span class="p">)</span>
  <span class="mf">4.</span> <span class="n">만약</span> <span class="n">음수</span> <span class="n">플래그에</span> <span class="n">음수라면</span> <span class="n">그대로</span> <span class="o">+</span> <span class="n">시킨다</span><span class="p">.</span>
    
  <span class="n">이러면</span> <span class="o">-</span><span class="n">와</span> <span class="o">-</span><span class="n">사이의</span> <span class="n">값을</span> <span class="n">괄호친</span> <span class="n">것과</span> <span class="n">동일하다</span><span class="p">.</span> 
    
</code></pre></div>    </div>
  </li>
  <li>
    <p>답안</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="n">sys</span>
    
  <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
      <span class="n">strings</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="nf">readline</span><span class="p">()</span>
      <span class="n">nums</span> <span class="o">=</span> <span class="p">[]</span>
      <span class="n">strings</span> <span class="o">=</span> <span class="n">strings</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="s">'+'</span><span class="p">,</span> <span class="s">' '</span><span class="p">).</span><span class="nf">replace</span><span class="p">(</span><span class="s">'-'</span><span class="p">,</span> <span class="s">' -'</span><span class="p">)</span>
      <span class="n">nums</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">strings</span><span class="p">.</span><span class="nf">split</span><span class="p">())</span>
      <span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>
      <span class="n">negative</span> <span class="o">=</span> <span class="mi">0</span>
      <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">:</span>
          <span class="n">num</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
          <span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
              <span class="n">negative</span> <span class="o">=</span> <span class="mi">1</span>
              <span class="nb">sum</span> <span class="o">+=</span> <span class="n">num</span>
          <span class="k">else</span><span class="p">:</span>
              <span class="k">if</span> <span class="n">negative</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                  <span class="nb">sum</span> <span class="o">-=</span> <span class="n">num</span>
              <span class="k">else</span><span class="p">:</span>
                  <span class="nb">sum</span> <span class="o">+=</span> <span class="n">num</span>
    
      <span class="nf">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><category term="algorithms" /><category term="beakjoon" /><category term="python" /><category term="S2" /><summary type="html"><![CDATA[백준 문제 풀이]]></summary></entry></feed>